[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab 10: Distances and the Border Zone",
    "section": "",
    "text": "In this lab we will explore the properties of sf, sfc, and sfg features & objects; how they are stored; and issues related to distance calculation and coordinate transformation.\nWe will continue to build on our data wrangling and data visualization skills; as well as document preparation via Quarto and GitHub.\n\n\n\n\n# spatial data science\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nWarning: package 'sf' was built under R version 4.4.3\n\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nWarning: package 'units' was built under R version 4.4.3\n\n\nudunits database from C:/Users/nevar/AppData/Local/R/win-library/4.4/units/share/udunits/udunits2.xml\n\n# Visualization\nlibrary(gghighlight)\n\nWarning: package 'gghighlight' was built under R version 4.4.3\n\nlibrary(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.4.3\n\nlibrary(knitr)\n\nWarning: package 'knitr' was built under R version 4.4.3\n\n#Loaded AOI later with Question 1.2!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#question-1",
    "href": "index.html#question-1",
    "title": "Lab 10: Distances and the Border Zone",
    "section": "Question 1:",
    "text": "Question 1:\nFor this lab we need three (3) datasets.\nSpatial boundaries of continental USA states (1.1) Boundaries of Canada, Mexico and the United States (1.2) All USA cites (1.3)\n\n1.1 Define a Projection\n\neqdc &lt;- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'\n\nMeaning of this beginning code:\n+proj=eqdc → Equidistant Conic projection\n+lat_0=40 → Latitude of the projection’s center (40°N)\n+lon_0=-96 → Central meridian (96°W)\n+lat_1=20 → First standard parallel (20°N)\n+lat_2=60 → Second standard parallel (60°N)\n+x_0=0 → False easting (0 meters)\n+y_0=0 → False northing (0 meters)\n+datum=NAD83 → Uses the North American Datum 1983 (NAD83)\n+units=m → Units are in meters\n+no_defs → No additional default parameters from PROJ’s database\n\n\n1.2 - Get USA state boundaries\n\nremotes::install_github(\"mikejohnson51/AOI\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'AOI' from a github remote, the SHA1 (f821d499) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nlibrary(AOI)\n\nremotes::install_github(\"ropensci/USAboundaries\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'USAboundaries' from a github remote, the SHA1 (0f56f492) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nremotes::install_github(\"ropensci/USAboundariesData\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'USAboundariesData' from a github remote, the SHA1 (064cdbcb) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nremotes::install_github(\"ropenscilabs/rnaturalearthdata\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'rnaturalearthdata' from a github remote, the SHA1 (ff4d891f) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n# Getting USA Boundaries:\n\nus &lt;- aoi_get(state = 'conus') |&gt;\n  glimpse()\n\nRows: 49\nColumns: 15\n$ state_region           &lt;int&gt; 3, 4, 3, 4, 4, 1, 3, 3, 3, 3, 4, 2, 2, 2, 2, 3,…\n$ state_division         &lt;int&gt; 6, 8, 7, 9, 8, 1, 5, 5, 5, 5, 8, 3, 3, 4, 4, 6,…\n$ feature_code           &lt;chr&gt; \"1779775\", \"1779777\", \"0068085\", \"1779778\", \"17…\n$ state_name             &lt;chr&gt; \"Alabama\", \"Arizona\", \"Arkansas\", \"California\",…\n$ state_abbr             &lt;chr&gt; \"AL\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\",…\n$ name                   &lt;chr&gt; \"Alabama\", \"Arizona\", \"Arkansas\", \"California\",…\n$ fip_class              &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ tiger_class            &lt;fct&gt; G4000, G4000, G4000, G4000, G4000, G4000, G4000…\n$ combined_area_code     &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ metropolitan_area_code &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ functional_status      &lt;fct&gt; A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A,…\n$ land_area              &lt;dbl&gt; 131175477769, 294363973043, 134660767709, 40367…\n$ water_area             &lt;dbl&gt; 4591897964, 855871553, 3121950081, 20293573058,…\n$ fip_code               &lt;chr&gt; \"01\", \"04\", \"05\", \"06\", \"08\", \"09\", \"10\", \"11\",…\n$ geometry               &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((-85.4883 30..., MU…\n\n# Setting it to the projection we made earlier:\n\nus_eqdc &lt;- st_transform(us, crs = eqdc)\n\nst_crs(us_eqdc)\n\nCoordinate Reference System:\n  User input: +proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \n  wkt:\nPROJCRS[\"unknown\",\n    BASEGEOGCRS[\"unknown\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6269]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8901]]],\n    CONVERSION[\"unknown\",\n        METHOD[\"Equidistant Conic\",\n            ID[\"EPSG\",1119]],\n        PARAMETER[\"Latitude of false origin\",40,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-96,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",20,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",60,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nBased on the glimpse of what the us boundary contains from the AOI , we can see that this data needed to be changed to reflex the earlier rpojection we made for mapping in North America. By using st_transform and st_crs, I was able to form the data, to reflect the boundaries we want it to be projected into!\n\n\n1.3 - Get country boundaries for Mexico, the United States of America, and Canada\n\nbound &lt;- aoi_get(country = c(\"MX\", \"CA\", \"USA\"))"
  }
]